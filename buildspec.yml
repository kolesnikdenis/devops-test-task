version: 0.2

env:
  variables:
    AWS_REGION: "eu-north-1"
    AWS_ACCOUNT_ID: "100230956415"
    AWS_SERVICE_NAME: ".dkr.ecr."
    AWS_DOMAIN_NAME: ".amazonaws.com"
    IMAGE_NAME: "test"
    CONTAINER_NAME: "autobuild_test"
    INSTANCE_ID: "i-091c99c198ad56e00"   
    username: $username
phases:
  #install:
    #runtime-versions:
    #  java: corretto8
    #commands:
  pre_build:
    commands:
      - REPOSITORY_URL="$AWS_ACCOUNT_ID$AWS_SERVICE_NAME$AWS_REGION$AWS_DOMAIN_NAME"
      - echo $REPOSITORY_URL
      - echo Setting up docker
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URL
  build:
    commands:
      - echo Build started on `date`
        #- aws ssm send-command  --document-name "AWS-RunShellScript"     --targets '[{"Key":"InstanceIds","Values":["i-091c99c198ad56e00"]}]'     --parameters '{"commands":["ls -ls /"]}' --region=eu-north-1
      - #//'mvn clean package'
  post_build:
    commands:
      - echo "Delete old CONTAINER $CONTAINER_NAME 3"
      - aws ecr batch-delete-image --repository-name $IMAGE_NAME --image-ids imageTag=$CONTAINER_NAME --region $AWS_REGION
      - echo $CONTAINER_NAME
      - docker image build -t $CONTAINER_NAME .
      - run="docker image tag $CONTAINER_NAME $REPOSITORY_URL/$IMAGE_NAME:$CONTAINER_NAME"
      - echo $run
      - docker image tag $CONTAINER_NAME $REPOSITORY_URL/$IMAGE_NAME:$CONTAINER_NAME
      - echo image name =  $IMAGE_NAME:$CONTAINER_NAME
      - echo image url = $REPOSITORY_URL/$IMAGE_NAME:$CONTAINER_NAME
      - docker push $REPOSITORY_URL/$IMAGE_NAME:$CONTAINER_NAME
      - echo Writing image definitions file...
      - printf '[{"name":"'"$CONTAINER_NAME"'","imageUri":"'"$REPOSITORY_URL"'/'"$IMAGE_NAME"':latest"}]' > imagedefinitions.json
      - cat imagedefinitions.json
      - echo Build completed on `date`
     #- aws ec2-instance-connect send-ssh-public-key --region $AWS_REGION --instance-id $INSTANCE_ID --availability-zone $AWS_REGION --instance-os-user ec2-user --ssh-public-key file://tmp_key.pub
      - aws ssm send-command  --document-name "AWS-RunShellScript"     --targets '[{"Key":"InstanceIds","Values":["i-091c99c198ad56e00"]}]'     --parameters '{"commands":["docker service update test"]}' --region=eu-north-1
      - echo "aws ssm send command end";
artifacts:
  files:
    - imagedefinitions.json
